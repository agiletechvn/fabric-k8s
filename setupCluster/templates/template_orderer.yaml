###channel-artifacts is no room to place, however bind it to the orderer is an good idea

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ${namespace}
  name: ${podName}
spec:
  selector:
    matchLabels:
      app: hyperledger
      role: orderer
      org: ${namespace}
      orderer-id: ${ordererID}
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: hyperledger
        role: orderer
        org: ${namespace}
        orderer-id: ${ordererID}
    spec:      
      containers:
      - name: ${podName}
        image: hyperledger/fabric-orderer:${version}
        env:
        # - name: CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE
        #   value: cbr0
        - name: ORDERER_GENERAL_LOGLEVEL
          value: debug
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: 0.0.0.0
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: file
        - name: ORDERER_GENERAL_GENESISFILE
          value: /var/hyperledger/orderer/orderer.genesis.block
        - name: ORDERER_GENERAL_LOCALMSPID
          value: ${localMSPID}
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: /var/hyperledger/orderer/msp
        - name: ORDERER_GENERAL_TLS_ENABLED
          value: "${tlsEnabled}"
        - name: ORDERER_GENERAL_TLS_PRIVATEKEY
          value: /var/hyperledger/orderer/tls/server.key
        - name: ORDERER_GENERAL_TLS_CERTIFICATE
          value: /var/hyperledger/orderer/tls/server.crt
        - name: ORDERER_GENERAL_TLS_ROOTCAS
          value: '[/var/hyperledger/orderer/tls/ca.crt]'
        workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        ports:
         - containerPort: 7050
        command: ["orderer"]
        volumeMounts:
          {% if nfsServer|length > 0 %}
          - mountPath: /var/hyperledger/orderer/msp 
            name: certificate
            subPath: ${mspPath}
            {% if tlsEnabled %}
          - mountPath: /var/hyperledger/orderer/tls
            name: certificate                      
            subPath: ${tlsPath}
            {% endif %}
          - mountPath: /var/hyperledger/orderer/orderer.genesis.block            
            name: certificate
            subPath: genesis.block
          {% else %}
          - mountPath: /var/hyperledger/orderer/msp 
            name: certificate            
            {% if tlsEnabled %}
          - mountPath: /var/hyperledger/orderer/tls
            name: tlscertificate
            {% endif %}
          - mountPath: /var/hyperledger/orderer/orderer.genesis.block                        
            name: genesis            
          # - mountPath: /var/hyperledger/production/orderer
          #   name: data
          {% endif %}
      volumes:
        {% if nfsServer|length > 0 %}
        - name: certificate
          persistentVolumeClaim:
            claimName: ${pvName}
          #path: ${shareFolder}
         #persistentVolumeClaim:
         #  claimName: nfs
        {% else %}
        - name: certificate
          hostPath:
            path: ${path}/msp
        - name: tlscertificate
          hostPath:
            path: ${path}/tls
        - name: genesis
          hostPath:
            path: ${genesis}/genesis.block
        # - name: data
        #   hostPath:
        #     path: ${shareFolder}/orderer/${namespace}/${ordererID}
            # path: /data/orderer/${namespace}/${ordererID}                  
        {% endif %}

---
apiVersion: v1
kind: Service
metadata:
  name: ${ordererID}
  namespace: ${namespace}
spec:
 selector:
   app: hyperledger
   role: orderer
   orderer-id: ${ordererID}
   org: ${namespace}
 type: NodePort
 # type: ClusterIP
 ports:
   - name: listen-endpoint
     protocol: TCP
     port: 7050
     targetPort: 7050
     nodePort: ${nodePort}
