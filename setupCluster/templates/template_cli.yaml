# apiVersion: v1
# kind: PersistentVolume
# metadata:
#     name: $artifactsName
# spec:
#     capacity:
#        storage: 500Mi
#     accessModes:
#        - ReadWriteMany
#     # storageClassName: standard
#     # hostPath:
#     #   path: $shareFolder/channel-artifacts
#     nfs: 
#       path: $shareFolder/channel-artifacts
#       server: $nsfServer
#       # server: 192.168.43.141 # change to your nfs server ip here.
# ---

# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#     namespace: $namespace
#     name: $artifactsName
# spec:
#   accessModes:
#      - ReadWriteMany
#   # storageClassName: standard
#   resources:
#       requests:
#         storage: 10Mi

# ---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
   namespace: $namespace
   name: $name
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
       app: cli
    spec:
      # nodeSelector:
      #   # assume all org node can access to docker
      #   org: $namespace
      containers:
        - name: $name
          image:  hyperledger/fabric-tools:x86_64-$version
          env:
          # - name: CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE
          #   value: cbr0
          - name: CORE_PEER_TLS_ENABLED
            value: "$tlsEnabled"
          - name: CORE_PEER_TLS_CERT_FILE
            value: "/etc/hyperledger/fabric/tls/server.crt"
          - name: CORE_PEER_TLS_KEY_FILE
            value: "/etc/hyperledger/fabric/tls/server.key"
          - name: CORE_PEER_TLS_ROOTCERT_FILE
            value: "/etc/hyperledger/fabric/tls/ca.crt"
          - name: CORE_VM_ENDPOINT
            value: unix:///host/var/run/docker.sock
          - name: GOPATH
            value: /opt/gopath
          - name: CORE_LOGGING_LEVEL
            value: DEBUG
          - name: CORE_PEER_ID
            value: $name
          - name: CORE_PEER_ADDRESS
            value: $peerAddress
          - name: CORE_PEER_LOCALMSPID
            value: $mspid
          - name: CORE_PEER_MSPCONFIGPATH
            value: /etc/hyperledger/fabric/msp
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
          command: [ "/bin/bash", "-c", "--" ]
          args: [ "while true; do sleep 30; done;" ]
          volumeMounts:
           - mountPath: /host/var/run/
             name: run
          # - mountPath: /opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go
          #   name: certificate
          #   subPath: chaincode
           - mountPath: /etc/hyperledger/fabric/msp
             name: certificate

           - mountPath: /etc/hyperledger/fabric/tls
             name: tlscertificate
             # subPath: $mspPath
           - mountPath: /etc/hyperledger/fabric/orderertls
             name: orderercertificate

           - mountPath: /opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
             name: artifacts
      volumes:                
        - name: certificate
          hostPath:
            path: $path/$mspPath

        - name: tlscertificate
          hostPath:
            path: $path/$tlsPath

        - name: orderercertificate
          hostPath:
            path: $shareFolder/crypto-config/ordererOrganizations/$orderer0/msp/tlscacerts

          # persistentVolumeClaim:
          #     claimName: $pvName
        - name: artifacts
          hostPath:
            path: $shareFolder/channel-artifacts
          # persistentVolumeClaim:
              # claimName: $artifactsName
        - name: run
          hostPath:
            path: /var/run
