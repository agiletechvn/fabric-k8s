apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ${namespace}
  name: ca
spec:
  selector:
    matchLabels:
      app: hyperledger
      role: ca
      org: ${namespace}
      name: ca
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: hyperledger
        role: ca
        org: ${namespace}
        name: ca
    spec:
      containers:
       - name: ca
         image: hyperledger/fabric-ca:${version}
         env: 
         - name:  FABRIC_CA_HOME
           value: /etc/hyperledger/fabric-ca-server
         - name:  FABRIC_CA_SERVER_CA_NAME
           value: ca
         - name:  FABRIC_CA_SERVER_TLS_ENABLED
           value: "${tlsEnabled}"
         - name:  FABRIC_CA_SERVER_TLS_CERTFILE
           value: ${tlsCert}
         - name:  FABRIC_CA_SERVER_TLS_KEYFILE
           value: ${tlsKey}
         ports:
          - containerPort: 7054
         command: ["sh"]
         args:  ["-c", ${command}]
         volumeMounts:
          {% if nfsServer|length > 0 %} 
          - mountPath: /etc/hyperledger/fabric-ca-server-config/ca
            name: certificate
            subPath: ${caPath}
          {% else %}
          - mountPath: /etc/hyperledger/fabric-ca-server-config
            name: certificate
          {% endif %}            
          # - mountPath: /etc/hyperledger/fabric-ca-server
          #   name: data
      volumes:
        {% if nfsServer|length > 0 %}  
        - name: certificate
          persistentVolumeClaim:
            claimName: ${pvName}
        {% else %}
        - name: certificate
          hostPath:
            path: ${path}/${caPath}
        {% endif %}
        #  - name: data
          #  hostPath:
             # path: ${shareFolder}/ca/${namespace}
            #  path: /data/ca/${namespace}

--- 
apiVersion: v1
kind: Service
metadata:
   namespace: ${namespace}
   name: ca
spec:
 selector:
   app: hyperledger
   role: ca
   org: ${namespace}
   name: ca
 type: NodePort
 # type: ClusterIP
 ports:
   - name: endpoint
     protocol: TCP
     port: 7054
     targetPort: 7054
     nodePort: ${nodePort}
